#
#
# Copyright DataStax, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

secrets:
  - id: kafka
    data:
      username: "${KAFKA_USERNAME:-}"
      password: "${KAFKA_PASSWORD:-}"
      tenant: "${KAFKA_TENANT:-}"
      bootstrap-servers: "${KAFKA_BOOTSTRAP_SERVERS:-}"
  - id: open-ai
    data:
      access-key: "${OPEN_AI_ACCESS_KEY:-}"
      url: "${OPEN_AI_URL:-}"
      provider: "${OPEN_AI_PROVIDER:-openai}"
      embeddings-model: "${OPEN_AI_EMBEDDINGS_MODEL:-text-embedding-ada-002}"
      chat-completions-model: "${OPEN_AI_CHAT_COMPLETIONS_MODEL:-gpt-3.5-turbo}"
      text-completions-model: "${OPEN_AI_TEXT_COMPLETIONS_MODEL:-gpt-3.5-turbo-instruct}"
  - id: voyage
    data:
      access-key: "${VOYAGE_API_KEY:-}"
  - id: vertex-ai
    data:
      url: "${VERTEX_AI_URL:-https://us-central1-aiplatform.googleapis.com}"
      token: "${VERTEX_AI_TOKEN:-}"
      # uncomment this and link to a file containing the service account JSON file
      # serviceAccountJson: "<file:service-account.json>"
      serviceAccountJson: "${VERTEX_AI_JSON:-}"
      region: "${VERTEX_AI_REGION:-us-central1}"
      project: "${VERTEX_AI_PROJECT:-}"
      chat-completions-model: "${VERTEX_AI_CHAT_COMPLETIONS_MODEL:-chat-bison}"
      text-completions-model: "${VERTEX_AI_TEXT_COMPLETIONS_MODEL:-text-bison}"
  - id: hugging-face
    data:
      access-key: ${HUGGING_FACE_ACCESS_KEY:-}
      provider: ${HUGGING_FACE_PROVIDER:-api}
      embeddings-model: ${HUGGING_FACE_EMBEDDINGS_MODEL:-multilingual-e5-small}
      embeddings-model-url: ${HUGGING_FACE_EMBEDDINGS_MODEL_URL:-djl://ai.djl.huggingface.pytorch/intfloat/multilingual-e5-small}
  - id: astra
    data:
      clientId: ${ASTRA_CLIENT_ID:-}
      secret: ${ASTRA_SECRET:-}
      token: ${ASTRA_TOKEN:-}
      database: ${ASTRA_DATABASE:-}
      # uncomment this and link to a file containing the secure connect bundle
      # secureBundle: "<file:secure-connect-bundle.zip>"
      secureBundle: ${ASTRA_SECURE_BUNDLE:-}
      environment: ${ASTRA_ENVIRONMENT:-PROD}
  - id: astra-vector-db
    data:
      token: ${ASTRA_VECTOR_DB_TOKEN:-}
      endpoint: ${ASTRA_VECTOR_DB_ENDPOINT:-}
  - id: astra-langchain
    data:
      token: "${ASTRA_LANGCHAIN_TOKEN:-}"
      database-id: "${ASTRA_LANGCHAIN_DATABASE_ID:-}"
      database: "${ASTRA_LANGCHAIN_DATABASE:-}"
      keyspace: "${ASTRA_LANGCHAIN_KEYSPACE:-}"
      table: "${ASTRA_LANGCHAIN_TABLE:-}"
      clientId: "${ASTRA_LANGCHAIN_CLIENT_ID:-}"
      secret: "${ASTRA_LANGCHAIN_SECRET:-}"
  - name: lang-smith
    id: lang-smith
    data:
      api-url: "${LANGSMITH_API_URL:-https://api.smith.langchain.com}"
      api-key: "${LANGSMITH_APIKEY:-}"
  - id: cassandra
    data:
      username: "${CASSANDRA_USERNAME:-}"
      password: "${CASSANDRA_PASSWORD:-}"
      secure-connect-bundle: "${CASSANDRA_SECURE_BUNDLE:-}"
      contact-points: "${CASSANDRA_CONTACT_POINTS:-}"
      load-balancing-loadDc: "${CASSANDRA_LOAD_BALANCING_LOCALDC:-}"
  - id: herddb
    data:
      url: ${HERDDB_URL:-jdbc:herddb:server:herddb.herddb-dev.svc.cluster.local:7000}
      user: ${HERDDB_USER:-sa}
      password: ${HERDDB_PASSWORD:-hdb}
  - id: s3
    data:
      bucket-name: "${S3_BUCKET_NAME:-documents}"
      # endpoint: "https://s3.amazonaws.com"
      endpoint: "${S3_ENDPOINT:-http://minio.minio-dev.svc.cluster.local:9000}"
      access-key: "${S3_ACCESS_KEY:-minioadmin}"
      secret: "${S3_SECRET:-minioadmin}"
      region: "${S3_REGION:-}"
  - id: google
    data:
      client-id: "${GOOGLE_CLIENT_ID:-}"
  - id: github
    data:
      client-id: "${GITHUB_CLIENT_ID:-}"
  - name: pinecone
    id: pinecone
    data:
      service: "${PINECONE_SERVICE:-Serverless}"
      api-key: "${PINECONE_ACCESS_KEY:-0c3865c6-718f-4f83-b333-47d47306d9ce}"
      project-name: "${PINECONE_PROJECT_NAME:-3z5lyp3}"
      environment: "${PINECONE_ENVIRONMENT:-aped-4627-b74a}"
      index-name: "${PINECONE_INDEX_NAME:-baseball}"
  - name: milvus
    id: milvus
    data:
      username: "${MILVUS_USERNAME:-}"
      password: "${MILVUS_PASSWORD:-}"
      host: "${MILVUS_HOST:-}"
      port: "${MILVUS_PORT:-19530}"
      url: "${MILVUS_URL:-}"
      token: "${MILVUS_TOKEN:-}"
      write-mode: "${MILVUS_WRITE_MODE:-upsert}"
  - name: solr
    id: solr
    data:
      username: "${SOLR_USERNAME:-}"
      password: "${SOLR_PASSWORD:-}"
      host: "${SOLR_HOST:-localhost}"
      port: "${SOLR_PORT:-8983}"
    name: couchbase
    id: couchbase
    data:
      username: "${COUCHBASE_USERNAME:-}" 
      password: "${COUCHBASE_PASSWORD:-}"
      connection-string: "${COUCHBASE_CONNECTION_STRING:-}"
  - name: azure
    id: azure
    data:
      storage-access-key: "${AZURE_STORAGE_ACCESS_KEY:-}"
      storage-account-name: "${AZURE_STORAGE_ACCOUNT_NAME:-}"
      container: "${AZURE_STORAGE_CONTAINER_NAME:-}"
  - name: opensearch
    id: opensearch
    data:
      username: "${OPENSEARCH_USERNAME:-admin}"
      password: "${OPENSEARCH_PASSWORD:-admin}"
      host: "${OPENSEARCH_HOST:-localhost}"
      port: "${OPENSEARCH_PORT:-9200}"
      https: "${OPENSEARCH_HTTPS:-false}"
      region: "${OPENSEARCH_REGION}"
  - name: elasticsearch
    id: elasticsearch
    data:
      host: "${ELASTICSEARCH_HOST:-c1a84a1a6c794a218febb2b6f29f223a.us-east4.gcp.elastic-cloud.com}"
      port: "${ELASTICSEARCH_PORT:-443}"
      https: "${ELASTICSEARCH_HTTPS:-true}"
      api-key: "${ELASTICSEARCH_API_KEY:-enJadEFwQUIwTGd3OUhqdEVJeVM6MWt2YzFaQUlUYk96RkpvOGJTcW1ndw==}"
  - name: bedrock
    id: bedrock
    data:
      access-key: "${BEDROCK_ACCESS_KEY}"
      secret-key: "${BEDROCK_SECRET_KEY}"
      region: "${REGION:-us-east-1}"
      completions-model: "${BEDROCK_COMPLETIONS_MODEL}"
  - name: ollama
    id: ollama
    data:
      url: "${OLLAMA_URL:-http://host.docker.internal:11434}"
      model: "${OLLAMA_MODEL:-llama2:13b}"
  - name: camel-github-source
    id: camel-github-source
    data:
      oauthToken: "${CAMEL_GITHUB_OAUTH_TOKEN:-xxxx}"
      repoName: "${CAMEL_GITHUB_REPO_NAME:-langstream}"
      repoOwner: "${CAMEL_GITHUB_REPO_OWNER:-langstream}"
      branch: "${CAMEL_GITHUB_BRANCH:-main}"
  - id: slack 
    data:
      token: "${SLACK_TOKEN:-}"
      url: "${SLACK_URL:-}"
      provider: "${SLACK_PROVIDER:-slack}"
