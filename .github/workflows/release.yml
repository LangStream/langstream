name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Release
    runs-on: LangStream-4-cores
    permissions: write-all
    steps:
      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Init maven repo
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build
        run: |
          chmod +x mvnw
          ./docker/build.sh

      - name: Deploy docker images
        run: |
          repo=ghcr.io/langstream
          docker_tag=${GITHUB_REF/refs\/tags\/v/}
          echo "Using docker tag: $docker_tag"
          tag_and_push() {
            image=$1
            docker tag langstream/$image:latest-dev $repo/$image:$docker_tag
            docker push $repo/$image:$docker_tag
          }
          tag_and_push langstream-runtime
          tag_and_push langstream-runtime-tester
          tag_and_push langstream-cli
          tag_and_push langstream-deployer
          tag_and_push langstream-control-plane
          tag_and_push langstream-api-gateway

      - name: Package mini-langstream
        run: |
          version=${GITHUB_REF/refs\/tags\/v/}
          ./mini-langstream/package.sh $version
      - name: Generate agents doc
        run: |
          ./mvnw package -pl langstream-webservice -PgenerateDoc,skipPython -DskipTests -Dspotless.skip -nsu 
          

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "langstream-cli/target/langstream-*.zip,helm/crds/*.yml,target/mini-langstream-*.zip,langstream-webservice/target/api.json"
          token: ${{ secrets.GITHUB_TOKEN }}
          generateReleaseNotes: true
          prerelease: false


  homebrew-release:
    needs: [ 'release' ]
    name: Bump Homebrew CLI and Homebrew mini-langstream formulae
    runs-on: ubuntu-latest
    steps:
      - name: Set output
        id: vars
        run: |
          echo "tag=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT
          echo "version=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_OUTPUT

      - uses: mislav/bump-homebrew-formula-action@v3
        with:
          formula-name: Langstream
          formula-path: langstream.rb
          download-url: https://github.com/LangStream/langstream/releases/download/${{ steps.vars.outputs.tag }}/langstream-cli-${{ steps.vars.outputs.version }}.zip
          homebrew-tap: LangStream/homebrew-langstream
        env:
          COMMITTER_TOKEN: ${{ secrets.HOMEBREW_TOKEN }}

      - uses: mislav/bump-homebrew-formula-action@v3
        with:
          formula-name: MiniLangstream
          formula-path: mini-langstream.rb
          download-url: https://github.com/LangStream/langstream/releases/download/${{ steps.vars.outputs.tag }}/mini-langstream-${{ steps.vars.outputs.version }}.zip
          homebrew-tap: LangStream/homebrew-langstream
        env:
          COMMITTER_TOKEN: ${{ secrets.HOMEBREW_TOKEN }}

      - name: Check out the repo
        uses: actions/checkout@v3

      - uses: ./.github/workflows/test-cli-macos.yml
        with:
          version: ${{ steps.vars.outputs.version }}