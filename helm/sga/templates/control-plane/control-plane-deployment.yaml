# Copyright DataStax, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sga.controlPlaneFullname" . }}
  labels:
    {{- include "sga.controlPlaneLabels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controlPlane.replicaCount }}
  selector:
    matchLabels:
      {{- include "sga.controlPlaneSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.controlPlane.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "sga.controlPlaneSelectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.controlPlane.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "sga.controlPlaneServiceAccountName" . }}
      securityContext:
        {{- toYaml .Values.controlPlane.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.controlPlane.securityContext | nindent 12 }}
          image: "{{ .Values.controlPlane.image.repository }}:{{ .Values.controlPlane.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.controlPlane.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.controlPlane.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /management/health
              port: http
            initialDelaySeconds: {{ .Values.controlPlane.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.controlPlane.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.controlPlane.liveness.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path: /management/health
              port: http
            initialDelaySeconds: {{ .Values.controlPlane.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.controlPlane.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.controlPlane.readiness.timeoutSeconds }}
          resources:
            {{- toYaml .Values.controlPlane.resources | nindent 12 }}
          env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom:
            - configMapRef:
                name: {{ include "sga.controlPlaneFullname" . }}
      {{- with .Values.controlPlane.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controlPlane.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controlPlane.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
