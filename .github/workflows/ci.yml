name: build
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  #--------------------------------------------------
  # Build and Tests the project on Linux
  #--------------------------------------------------
  tests:
    name: tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: 'Setup: checkout project'
        uses: actions/checkout@v2
      - name: 'Setup: Java 17'
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17.x'
      - name: 'Setup: Python 3.11'
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: 'Init: cache local Maven repository'
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: 'Init: install tox'
        run: pip install -r requirements.txt
      - name: 'Test: run tests'
        run: |
          chmod +x mvnw
          ./mvnw clean verify -Pdocker -pl !:e2e-tests
  e2e-tests:
    name: e2e-tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: 'Setup: checkout project'
        uses: actions/checkout@v2
      - name: 'Setup: Java 17'
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17.x'
      - name: 'Init: cache local Maven repository'
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Start minikube
        id: minikube
        uses: medyagh/setup-minikube@latest
      - uses: azure/setup-helm@v3
        with:
          version: v3.7.0

      - name: 'Prepare kubectl'
        run: |
          echo "KUBECONFIG_B64=$(cat $HOME/.kube/config | base64) >> $GITHUB_ENV
      - uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ env.KUBECONFIG_B64 }}

      - name: 'Build and test'
        run: |
          chmod +x mvnw
          uname -m
          eval $(minikube docker-env)
          ./docker/build.sh
          docker pull confluentinc/cp-kafka
          eval $(minikube docker-env -u)
          ./mvnw install -pl e2e-tests -am -DskipTests
          ./mvnw verify -pl e2e-tests          
