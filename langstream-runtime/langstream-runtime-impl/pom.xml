<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright DataStax, Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>langstream-runtime</artifactId>
    <groupId>ai.langstream</groupId>
    <version>0.3.2-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>langstream-runtime-impl</artifactId>

  <properties>
    <skipPythonPackage>false</skipPythonPackage>
  </properties>


  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>langstream-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>langstream-core</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>langstream-runtime-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>langstream-admin-client</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>langstream-kafka</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>langstream-pulsar</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!-- implementation for the Kafka Consumers/Producers -->


    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka-clients</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.confluent</groupId>
      <artifactId>kafka-avro-serializer</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.pulsar</groupId>
      <artifactId>pulsar-client-admin</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.pulsar</groupId>
      <artifactId>pulsar-client-original</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>connect-api</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>langstream-kafka-runtime</artifactId>
      <version>${project.version}</version>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.datastax.oss</groupId>
      <artifactId>java-driver-core-shaded</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>langstream-codestorage-s3</artifactId>
      <version>${project.version}</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>langstream-k8s-runtime-core</artifactId>
      <version>${project.version}</version>
      <scope>runtime</scope>
    </dependency>



    <!-- used by Pulsar and Pinecone -->
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <version>3.24.1</version>
      <scope>runtime</scope>
    </dependency>

    <!-- metrics -->
    <dependency>
      <groupId>io.prometheus</groupId>
      <artifactId>simpleclient</artifactId>
    </dependency>
    <!-- Hotspot JVM metrics-->
    <dependency>
      <groupId>io.prometheus</groupId>
      <artifactId>simpleclient_hotspot</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-servlet</artifactId>
    </dependency>
    <dependency>
      <groupId>io.prometheus</groupId>
      <artifactId>simpleclient_servlet</artifactId>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>kafka</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>cassandra</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>pulsar</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.opensearch</groupId>
      <artifactId>opensearch-testcontainers</artifactId>
      <version>2.0.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.fabric8</groupId>
      <artifactId>kubernetes-server-mock</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>langstream-k8s-common</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
      <classifier>tests</classifier>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>langstream-k8s-runtime-core</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
      <classifier>tests</classifier>
    </dependency>
    <dependency>
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.burningwave</groupId>
      <artifactId>tools</artifactId>
      <scope>test</scope>
    </dependency>

    <!--    Agents: ensure this module is dependant from agents modules, DO NOT REMOVE-->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>langstream-kafka-runtime</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>langstream-pulsar-runtime</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>langstream-ai-agents</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>langstream-agents-text-processing</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>langstream-agent-s3</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>langstream-agent-azure-blob-storage-source</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>langstream-agent-webcrawler</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>langstream-vector-agents</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>langstream-agent-grpc</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>langstream-agent-http-request</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>langstream-agents-flow-control</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>

  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.11</version>
        <executions>
          <execution>
            <id>regex-property</id>
            <goals>
              <goal>regex-property</goal>
            </goals>
            <configuration>
              <name>pythonpackage.version</name>
              <value>${project.version}</value>
              <regex>-SNAPSHOT</regex>
              <replacement>.dev</replacement>
              <failIfNoMatch>false</failIfNoMatch>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>copy-python-files</id>
            <phase>compile</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <echo>copy python runtime files</echo>
                <mkdir dir="${basedir}/target/python" />
                <copydir src="${basedir}/src/main/python" dest="${basedir}/target/python" />
                <copydir src="${basedir}/src/main/python/langstream" dest="${basedir}/target/python/langstream" />
                <copydir src="${basedir}/src/main/python/langstream_grpc" dest="${basedir}/target/python/langstream_grpc" />
                <copy file="${basedir}/src/main/python/LICENSE" todir="${basedir}/target/python" />
                <copy file="${basedir}/src/main/python/Pipfile" todir="${basedir}/target/python" />
                <copy file="${basedir}/src/main/python/Pipfile.lock" todir="${basedir}/target/python" />
                <copy file="${basedir}/src/main/python/pyproject.toml" todir="${basedir}/target/python" />
                <replaceregexp file="${basedir}/target/python/pyproject.toml" match="version = &quot;0.0.0&quot;" replace="version=&quot;${pythonpackage.version}&quot;" />
                <copy file="${basedir}/src/main/python/README.md" todir="${basedir}/target/python" />
                <copy file="${basedir}/src/main/python/setup.py" todir="${basedir}/target/python" />
                <copy file="${basedir}/src/main/python/tox.ini" todir="${basedir}/target/python" />
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>python-lint-black</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <workingDirectory>${project.basedir}/src/main/python</workingDirectory>
              <executable>black</executable>
              <arguments>
                <argument>.</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>python-lint-ruff</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <workingDirectory>${project.basedir}/src/main/python</workingDirectory>
              <executable>ruff</executable>
              <arguments>
                <argument>--fix</argument>
                <argument>.</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>python-test</id>
            <phase>test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <workingDirectory>${project.build.directory}/python</workingDirectory>
              <executable>tox</executable>
              <skip>${skipTests}</skip>
            </configuration>
          </execution>
          <execution>
            <id>python-package</id>
            <phase>package</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <workingDirectory>${project.build.directory}/python</workingDirectory>
              <executable>python</executable>
              <skip>${skipPythonPackage}</skip>
              <arguments>
                <argument>-m</argument>
                <argument>build</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>

                <!-- JDBC driver for tests -->

                <artifactItem>
                  <groupId>org.herddb</groupId>
                  <artifactId>herddb-jdbc</artifactId>
                  <classifier>thin</classifier>
                  <version>0.28.0</version>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/test-jdbc-drivers/java/lib</outputDirectory>
                </artifactItem>

                <!-- main implementation for the Agents, Assets and TopicConnectionsRuntime-->

                <artifactItem>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>langstream-kafka-runtime</artifactId>
                  <version>${project.version}</version>
                  <type>nar</type>
                  <classifier>nar</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/agents</outputDirectory>
                </artifactItem>

                <artifactItem>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>langstream-pulsar-runtime</artifactId>
                  <version>${project.version}</version>
                  <type>nar</type>
                  <classifier>nar</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/agents</outputDirectory>
                </artifactItem>

                <artifactItem>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>langstream-ai-agents</artifactId>
                  <version>${project.version}</version>
                  <type>nar</type>
                  <classifier>nar</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/agents</outputDirectory>
                </artifactItem>

                <artifactItem>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>langstream-agents-text-processing</artifactId>
                    <version>${project.version}</version>
                    <type>nar</type>
                    <classifier>nar</classifier>
                    <overWrite>false</overWrite>
                    <outputDirectory>${project.build.directory}/agents</outputDirectory>
                </artifactItem>

                <artifactItem>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>langstream-agents-flow-control</artifactId>
                  <version>${project.version}</version>
                  <type>nar</type>
                  <classifier>nar</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/agents</outputDirectory>
                </artifactItem>

                <artifactItem>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>langstream-agent-grpc</artifactId>
                  <version>${project.version}</version>
                  <type>nar</type>
                  <classifier>nar</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/agents</outputDirectory>
                </artifactItem>

                <artifactItem>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>langstream-agent-s3</artifactId>
                  <version>${project.version}</version>
                  <type>nar</type>
                  <classifier>nar</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/agents</outputDirectory>
                </artifactItem>

                <artifactItem>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>langstream-agent-azure-blob-storage-source</artifactId>
                  <version>${project.version}</version>
                  <type>nar</type>
                  <classifier>nar</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/agents</outputDirectory>
                </artifactItem>

                <artifactItem>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>langstream-agent-webcrawler</artifactId>
                  <version>${project.version}</version>
                  <type>nar</type>
                  <classifier>nar</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/agents</outputDirectory>
                </artifactItem>

                <artifactItem>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>langstream-vector-agents</artifactId>
                  <version>${project.version}</version>
                  <type>nar</type>
                  <classifier>nar</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/agents</outputDirectory>
                </artifactItem>

                <artifactItem>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>langstream-agent-http-request</artifactId>
                  <version>${project.version}</version>
                  <type>nar</type>
                  <classifier>nar</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/agents</outputDirectory>
                </artifactItem>

              </artifactItems>

            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.6.0</version>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <descriptors>
            <descriptor>${project.basedir}/src/main/assemble/langstream-runtime.xml</descriptor>
          </descriptors>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <skip>false</skip>
          <classesDirectory>${project.build.outputDirectory}</classesDirectory>
          <runOrder>alphabetical</runOrder>
          <includes>
            <include>**/*IT*</include>
          </includes>
        </configuration>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
          <execution>
            <id>verify</id>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <profiles>
    <profile>
      <id>skipPython</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-python-files</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>python-lint-black</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>python-lint-ruff</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>python-test</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>python-package</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>docker</id>
      <activation>
        <property>
          <name>docker</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <configuration>
              <verbose>true</verbose>
              <images>
                <image>
                  <name>langstream/langstream-runtime:latest-dev</name>
                  <build>
                    <dockerFile>${project.basedir}/src/main/docker/Dockerfile</dockerFile>
                    <assembly>
                      <descriptor>${project.basedir}/src/main/assemble/langstream-runtime.xml</descriptor>
                    </assembly>
                  </build>
                </image>
              </images>
            </configuration>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>build</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
